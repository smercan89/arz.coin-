name: Upload to IPFS
on:
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  upload-ipfs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: aquiladev/ipfs-action@v0.1.5
        id: upload-dapps
        with:
          path: ./dapps
          service: pinata
         pinata_api_key: (239212f4721e57d81f8a777c15f5faa70ebb8f5bf35089ab9dan )
        pinata_secret_api_key: (05817208a645ed09bee1e5d4ecc6ceb324981676f36afeb8bd2d)
          pinataPinName: dapps
          verbose: false
- name: Run Parasoft C/C++test
  # You may pin to the exact commit or the version.
  # uses: parasoft/run-cpptest-action@aeb0150eeb0f96098ad3bac53609fd462f88c4f6
  uses: parasoft/run-cpptest-action@1.0.1
  with:
    # Installation folder of Parasoft C/C++test. If not specified, the cpptestcli executable must be added to $PATH.
    installDir: # optional
    # Working directory for running C/C++test.
    workingDir: # optional, default is ${{ github.workspace }}
    # Identifier of a compiler configuration. Ensure you specify the configuration that matches your compiler.
    compilerConfig: # optional, default is gcc_9-64
    # Test configuration to be used for code analysis.
    testConfig: # optional, default is builtin://Recommended Rules
    # Output folder for reports from code analysis.
    reportDir: # optional, default is reports
    # Format of reports from code analysis.
    reportFormat: # optional, default is xml,html,sarif
    # Input scope for analysis (typically, cpptestscan.bdf or compile_commands.json, depending on the project type and the build system).
    input: # optional, default is cpptestscan.bdf
    # Additional parameters for the cpptestcli executable.
    additionalParams: # optional, default is 
    # Command line pattern for running C/C++test.
    commandLinePattern: # optional, default is ${cpptestcli} -compiler "${compilerConfig}" -config "${testConfig}" -property report.format=${reportFormat} -report "${reportDir}" -module . -input "${input}" ${additionalParams}
